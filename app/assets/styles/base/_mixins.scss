/*********************************************************************
*
*  base/mixins
*  Placeholders that makes our MUCH life much easier
*
*********************************************************************/

/*********************************************************************
*  =Colorful links
*
*  Provide a set of colors for normal, :visited, :hover, and :active
*  links, based on a base color. Should be used like this:
*
*  .my-class a {
*    @include colorful-links(#abcdef);
*  }
*********************************************************************/

@mixin colorful-link($color) {
  @include single-transition(color, .1s, ease-out);

  color: $color;

  &:visited { color: $color; }
  &:hover   { color: adjust-color($color, $lightness: +10%); }
  &:active  { color: adjust-color($color, $lightness: -5%); }
}

/*********************************************************************
*  panel
*  Panel like box mixin
*
*  .my-class a {
*    @include panel();
*  }
*********************************************************************/
@mixin panel($border-color: #ccc) {
  border: 1px solid $border-color;
  border-radius: 5px;
  box-shadow: 3px 4px 0 rgba(0,0,0,0.06);
}

/*********************************************************************
*  card
*  Material design card
*
*  .my-class a {
*    @include card();
*  }
*********************************************************************/
@mixin card($border-color: #ccc) {
  border: 1px solid $border-color;
  border-radius: 5px;
  box-shadow: 0 2px 3px 0 rgba(0,0,0, 0.26);
}

/*********************************************************************
*  user-select-none
*  Disable user selection
*
*  .my-class {
*    @include user-select-none();
*  }
*********************************************************************/
@mixin user-select-none() {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}


// Form state mixin
//
@mixin pixel-form-state-base($color, $font-color, $border-color, $input-border-color: darken($border-color, 17%)) {
  .control-label {
    color: $text-color;
  }

  .help-block {
    background: $color;
    border-color: $border-color;
    color: $font-color;
    background-size: 20px 20px;

    &:before {
      border-bottom-color: darken($border-color, 10%);
    }

    &:after{
      border-bottom-color: lighten($color, 1%);
    }
  }

  .form-control {
    border-color: $input-border-color;
    @include box-shadow(none);
    &:focus,
    &.focus {
      border-color: darken($input-border-color, 10%) !important;
      @include box-shadow(none);
    }
  }
  .input-group-addon {
    color: $font-color;
    border-color: $border-color;
    background-color: $color;
  }

  .form-control-feedback {
    color: darken($input-border-color, 10%);
  }
}

// Light form state mixin
//
@mixin pixel-form-state-light($color, $font-color, $border-color) {
  @include pixel-form-state-base($color, $font-color, $border-color);
}

@mixin pixel-form-state-simple($color) {
  .help-block {
    color: $color !important;
  }
}


// Dark form state mixin
//
@mixin pixel-form-state-dark($color, $input-border-color, $stripes-opacity: .06) {
  @include pixel-form-state-base($color, $font-color: #fff, $border-color: darken($color, 10%), $input-border-color: $color);
  .help-block {
    background: $color;
    background-image: -webkit-gradient(linear, 0 100%, 100% 0, color-stop(.25, rgba(255,255,255,$stripes-opacity)), color-stop(.25, transparent), color-stop(.5, transparent), color-stop(.5, rgba(255,255,255,$stripes-opacity)), color-stop(.75, rgba(255,255,255,$stripes-opacity)), color-stop(.75, transparent), to(transparent));
    background-image: -webkit-linear-gradient(45deg, rgba(255,255,255,$stripes-opacity) 25%, transparent 25%, transparent 50%, rgba(255,255,255,$stripes-opacity) 50%, rgba(255,255,255,$stripes-opacity) 75%, transparent 75%, transparent);
    background-image: -moz-linear-gradient(45deg, rgba(255,255,255,$stripes-opacity) 25%, transparent 25%, transparent 50%, rgba(255,255,255,$stripes-opacity) 50%, rgba(255,255,255,$stripes-opacity) 75%, transparent 75%, transparent);
    background-image: linear-gradient(45deg, rgba(255,255,255,$stripes-opacity) 25%, transparent 25%, transparent 50%, rgba(255,255,255,$stripes-opacity) 50%, rgba(255,255,255,$stripes-opacity) 75%, transparent 75%, transparent);
    background-size: 20px 20px;
  }
}

// Note states mixin
//
@mixin pixel-note-mixin($color, $bg-color) {
  border-color: $color;
  background: $bg-color;

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    color: $color;
  }
}

// Gradient
//
@mixin pixel-gradient($fallback: #888, $start: #000, $end: #fff, $start-percent: 0%, $end-percent: 100%) {
  background: $fallback;
  background-image: -webkit-linear-gradient(top, $start $start-percent, $end $end-percent);  // Safari 5.1-6, Chrome 10+
  background-image: linear-gradient(to bottom, $start $start-percent, $end $end-percent); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+
  background-repeat: repeat-x;
}

@mixin pixel-gradient-forced($fallback: #888, $start: #000, $end: #fff, $start-percent: 0%, $end-percent: 100%) {
  background: $fallback !important;
  background-image: -webkit-linear-gradient(top, $start $start-percent, $end $end-percent) !important;  // Safari 5.1-6, Chrome 10+
  background-image: linear-gradient(to bottom, $start $start-percent, $end $end-percent) !important; // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+
  background-repeat: repeat-x;
}

// IE background: none fix
//
@mixin ie-background-none() {
  background: url('#{$images-path}/pixel-admin/blank.png')\9;
}

// Button mixin
//
@mixin pixel-button($color, $gradient: 6%, $hover: 3%, $border: 0%, $font-color: #fff, $gradient-offset: 2%) {
  color: $font-color;

  &,
  &:focus {
    border-color: darken($color, 5% + $border);
    border-bottom-color: darken($color, 11% + $border);
    @include pixel-gradient(
      $fallback: $color,
      $start:    lighten($color, floor($gradient/2.0%) - $gradient-offset),
      $end:      darken($color, floor($gradient/2.0%) + $gradient-offset)
    );
  }

  &:hover {
    color: $font-color;
    border-color: darken($color, 8% + $border);
    border-bottom-color: darken($color, 18% + $border);
    @include pixel-gradient-forced(
      $fallback: darken($color, $hover + $gradient-offset),
      $start:    darken(lighten($color, floor($gradient/2.0%) - $gradient-offset), $hover),
      $end:      darken(darken($color, floor($gradient/2.0%) + $gradient-offset), $hover)
    );
  }

  &:active,
  &.active,
  .open &.dropdown-toggle {
    background: none;
    background: darken($color, $gradient/2.0% + 1%) !important;
    border-color: darken($color, 14% + $border);
    border-bottom-color: darken($color, 14% + $border) !important;
    color: $font-color;
    @include box-shadow(0 0 12px rgba(0, 0, 0, .1) inset);
  }

  &.btn-flat {
    background: darken($color, 3%);

    &:hover,
    &:active,
    &.active,
    .open &.dropdown-toggle {
      background: darken($color, 3%) !important;
      color: $font-color;
    }
  }

  &.btn-outline,
  &.btn-outline.btn-flat {
    &:hover {
      color: $font-color;
      border-color: darken($color, 8% + $border);
      border-bottom-color: darken($color, 18% + $border);
    }

    &:active {
      border-color: darken($color, 14% + $border);
    }
  }

  // Button groups & Input groups
  //
  .btn-group &,
  .btn-group &:focus,
  .input-group-btn &,
  .input-group-btn &:focus {
    border-left-color: darken($color, 8% + $border);
    border-right-color: darken($color, 8% + $border);
  }
  .btn-group &:hover,
  .btn-group.open &.dropdown-toggle,
  .input-group-btn &:hover,
  .input-group-btn.open &.dropdown-toggle {
    border-color: darken($color, 8% + $border);
    border-bottom-color: darken($color, 18% + $border);
  }
  .btn-group &:active,
  .btn-group &.active,
  .input-group-btn &:active,
  .input-group-btn &.active {
    border-left-color: darken($color, 14% + $border);
    border-right-color: darken($color, 14% + $border);
  }
}

@mixin forum-user-avatar ($size) {
  text-align: center;

  & .avatar {
    height: $size;
    width: $size;
    border-radius: 50%;
    margin-bottom: 10px;
  }

  & .name {
    display: block;
    font-size: 14px;
  }
}
